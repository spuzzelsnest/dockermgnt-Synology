version: "3.7"

services:
###########
# PI-HOLE #
###########
  pihole:
    image: pihole/pihole:latest
    container_name: mgnt-pihole
    hostname: dckvm-piHole
    restart: ${RESTART_POLICY}
    env_file: .env
    volumes:
      - ./data/pihole/etc-pihole:/etc/pihole
      - ./data/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    cap_add:
      - NET_ADMIN
    dns:
      - ${DNS01}
      - ${DNS02}
    environment:
      - DNS1=${DNS01}
      - DNS2=${DNS02}
      - ServerIP=${PIHOLE_IP}
      - DNSMASQ_LISTENING=all
      - WEBPASSWORD=${PIHOLE_PASS}
      - TZ= ${TZ}
      - mac-address=${PIHOLE_MAC}
    networks:
      - mainLan

####################
# UNIFI CONTROLLER #
####################
  mgnt-unifi:
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: mgnt-unifi
    restart: ${RESTART_POLICY}
    depends_on:
      mgnt-mongo:
        condition: service_healthy
    env_file: .env
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - MONGO_USER=${DB_USER}
      - MONGO_PASS=${DB_PASS}
      - MONGO_HOST=mgnt-mongo
      - MONGO_PORT=27017
      - MONGO_DBNAME=${DB_NAME}
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
    volumes:
      - ./data/unifi:/config
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    networks:
      mainLan:
        ipv4_address: ${UNIFI_IP}

############
# UNIFI DB #
############
  mgnt-mongo:
    image: docker.io/mongo:4.0
    container_name: mgnt-mongo
    restart: ${RESTART_POLICY}
    volumes:
      - ./data/unifi/db:/data/db
      - ./data/unifi/dbcfg:/data/configdb
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - 27017:27017
    networks:
      - locMgnt
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 120s

############
# HEIMDALL #
############
  heimdall:
    image: linuxserver/heimdall
    container_name: mgnt-heimdall
    restart: ${RESTART_POLICY}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./data/heimdall:/config
    ports:
      - ${HEIMDALL_PORT}:80
      - ${HEIMDALL_PORT_SSL}:443
    expose:
      - ${HEIMDALL_PORT}
      - ${HEIMDALL_PORT_SSL}
    networks:
      - locMgnt

#############
# PORTAINER #
#############
  portainer:
    image: portainer/portainer-ce
    container_name: mgnt-portainer
    restart: ${RESTART_POLICY}
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock
      - ./data/portainer:/data
    ports:
      - ${PORTAINER_PORT_UI}:9000
      - ${PORTAINER_PORT_SSL}:8000
    expose:
      - ${PORTAINER_PORT_UI}
      - ${PORTAINER_PORT_SSL}
    networks:
      - locMgnt

volumes:
  data:

networks:
  locMgnt:
    driver: bridge
  mainLan:
# If network gets created by docker compose
    name: mainLan
    driver: macvlan
    driver_opts:
      parent: ${NET_INT}
    ipam:
      config:
        - subnet: ${IP_SUB}
          gateway: ${IP_GAT}
# If network is created externally 
#    external: true
