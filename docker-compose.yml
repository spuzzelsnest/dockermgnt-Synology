services:
#############
# PORTAINER #
#############
  portainer:
    image: portainer/portainer:linux-arm-2.0.1
    container_name: mgnt-portainer
    restart: ${RESTART_POLICY}
    volumes:
      - "${DOCKER_SOCKET}:/var/run/docker.sock"
      - "./data/portainer:/data"
    ports:
      - ${PORTAINER_PORT_UI}:9000
      - ${PORTAINER_PORT_SSL}:8000
    expose:
      - ${PORTAINER_PORT_UI}
      - ${PORTAINER_PORT_SSL}
    networks:
      - locMgnt

###########
# PI-HOLE #
###########
  pihole:
    image: pihole/pihole:nightly
    container_name: mgnt-pihole
    hostname: dckvm-piHole
    restart: ${RESTART_POLICY}
    env_file: .env
    volumes:
      - "./data/pihole/etc-pihole:/etc/pihole"
      - "./data/pihole/etc-dnsmasq.d:/etc/dnsmasq.d"
      - "./init/resolv.conf:/etc/resolv.conf"
    ports:
      - "53:53/tcp"
      - "10.72.72.2:53:53/udp"
      - "81:80/tcp"
      - "443:443/tcp"
    cap_add:
      - NET_ADMIN
    dns:
      - ${DNS01}
      - ${DNS02}
    environment:
      - DNS1=${DNS01}
      - DNS2=${DNS02}
      - ServerIP=${PIHOLE_IP}
      - DNSMASQ_LISTENING=all
      - WEBPASSWORD=${PIHOLE_PASS}
      - TZ= ${TZ}
      - mac-address=${PIHOLE_MAC}
    networks:
      - mainLan

####################
# UNIFI CONTROLLER #
####################
  mgnt-unifi:
    image: linuxserver/unifi-controller:arm32v6-latest
    container_name: mgnt-unifi
    restart: ${RESTART_POLICY}
    env_file: .env
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
    volumes:
      - "./data/unifi:/config"
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    networks:
      mainLan:
        ipv4_address: ${UNIFI_IP}

volumes:
  data:

networks:
  locMgnt:
    driver: bridge
  mainLan:
# If network gets created by docker compose
    name: mainLan
    driver: macvlan
    driver_opts:
      parent: ${NET_INT}
    ipam:
      config:
        - subnet: ${IP_SUB}
          gateway: ${IP_GAT}
# If network is created externally 
#    external: true
