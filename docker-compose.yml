version: "3.7"

services:
###########
# PI-HOLE #
###########
  pihole:
    container_name: pihole
    hostname: dckvm-piHole
    image: pihole/pihole:latest
    restart: ${RESTART_POLICY}
    env_file: .env
    volumes:
      - ./data/pihole/etc-pihole:/etc/pihole
      - ./data/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    cap_add:
      - NET_ADMIN
    dns:
      - ${DNS01}
      - ${DNS02}
    environment:
      - DNS1=${DNS01}
      - DNS2=${DNS02}
      - ServerIP=${PIHOLE_IP}
      - DNSMASQ_LISTENING=all
      - WEBPASSWORD=${PIHOLE_PASS}
      - TZ= ${TZ}
      - mac-address=${PIHOLE_MAC}
    networks:
      - mainLan

####################
# UNIFI CONTROLLER #
####################
#  uniCon:
#    image: lscr.io/linuxserver/unifi-controller:latest
#    container_name: uniCon
#    restart: always
#    env_file: .env
#    environment:
#      - TZ=${TZ}
#      - PUID=${PUID}
#      - PGID=${PGID}
#      - MEM_LIMIT=1024 #optional
#      - MEM_STARTUP=1024 #optional
#    volumes:
#      - ./data/unifi_data/config:/config
#    networks:
#      mainLan:
#        ipv4_address: ${UNIFI_IP}

############
# HEIMDALL #
############
  heimdall:
    image: linuxserver/heimdall
    container_name: mgnt-heimdall
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./data/heimdall:/config
    ports:
      - ${HEIMDALL_PORT}:80
      - ${HEIMDALL_PORT_SSL}:443
    expose:
      - ${HEIMDALL_PORT}
      - ${HEIMDALL_PORT_SSL}
    restart: ${RESTART_POLICY}
    labels:
     # - ${UPDATE_ON}
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - locMgnt

#############
# PORTAINER #
#############
  portainer:
    image: portainer/portainer-ce
    container_name: mgnt-portainer
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock
      - ./data/portainer:/data
    ports:
      - ${PORTAINER_PORT_UI}:9000
      - ${PORTAINER_PORT_SSL}:8000
    expose:
      - ${PORTAINER_PORT_UI}
      - ${PORTAINER_PORT_SSL}
    restart: ${RESTART_POLICY}
    labels:
      #- ${UPDATE_ON}
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - locMgnt

##############
# WATCHTOWER #
##############
  watchtower:
    image: containrrr/watchtower
    container_name: mgnt-watchtower
    restart: ${RESTART_POLICY}
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    command: --interval 604800 --cleanup --debug
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
#      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=${WATCHTOWER_LABEL_UPDATE}
#      - 'WATCHTOWER_SCHEDULE=${WATCHTOWER_SCHEDULE}'
#      - WATCHTOWER_DEBUG=true
      - WATCHTOWER_NOTIFICATIONS=${WATCHTOWER_NOTIFICATION}
      - WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL=${WATCHTOWER_HOOK}
      - WATCHTOWER_NOTIFICATION_SLACK_CHANNEL=${WATCHTOWER_CHANNEL}
      - WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER=Watchtower
      - WATCHTOWER_NOTIFICATION_SLACK_ICON_EMOJI=${WATCHTOWER_ICON}
#      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${SMTP_FROM}
#      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_EMAIL}
#      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${SMTP_SERVER}
#      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${SMTP_PORT}
#      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${SMTP_USER}
#      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${SMTP_PASS}
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock
      - /etc/ssl/certs:/etc/ssl/certs
    labels:
     # - ${UPDATE_ON}
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - locMgnt

volumes:
  data:

networks:
  locMgnt:
    driver: bridge

  mainLan:
# If network gets created by docker compose
#    name: mainLan
#    driver: macvlan
#    driver_opts:
#      parent: ${NET_INT}
#    ipam:
#      config:
#        - subnet: ${IP_SUB}
#          gateway: ${IP_GAT}
# If network is created externally 
    external: true
